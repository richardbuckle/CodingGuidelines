{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fswiss\fcharset0 Optima-Regular;\f1\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;}
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\fi360\sl288\slmult1\pardirnatural

\f0\b\fs32 \cf0 Avoid mutable container properties\
\

\fs28 Guideline:
\fs32 \

\b0\fs24 Avoid mutable container properties.\
\

\b\fs28 Bad:
\fs32 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\fi360\sl288\slmult1\pardirnatural

\f1\b0\fs24 \cf0 	@interface Foo \{\
	@property (readwrite, retain) NSMutableArray *someArray;\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\fi360\sl288\slmult1\pardirnatural

\f0 \cf0 \

\b\fs28 Good:
\fs32 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\fi360\sl288\slmult1\pardirnatural

\f1\b0\fs24 \cf0 	@interface Foo \{\
	@property (readwrite, retain) NSArray *someArray;\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\fi360\sl288\slmult1\pardirnatural

\f0 \cf0 \

\b\fs28 Rationale:
\fs32 \

\b0\fs24 Mutable container properties allow the contents of the property to be modified without the owning object's knowledge. This severely violates encapsulation, and breaks fundamental Cocoa technologies such as key-value-observing.\
\
Because Cocoa container classes are pointer-based, the overhead of sticking to immutable container properties is small. Indeed, it was one of Cocoa's design goals. Additionally, immutable containers implement many optimisations that mutable containers cannot.\
\

\b\fs28 Permitted Exceptions:
\fs32 \

\b0\fs24 Properties that are declared only in the class extension in the .m file. But that should be viewed as a last resort: KVO and KVC can still cause problems.\
\
}